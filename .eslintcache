[{"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\reportWebVitals.js":"1","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\utils\\axiosConfig.js":"2","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\App.js":"3","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\types\\index.js":"4","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\actions\\tasksActions.js":"5","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\store\\index.js":"6","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\reducers\\tasksReducer.js":"7","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\reducers\\index.js":"8","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\components\\TaskCreation\\index.jsx":"9","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\components\\Task\\index.jsx":"10","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\components\\TaskManager\\index.jsx":"11","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\components\\TaskTable\\index.jsx":"12","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\constants\\index.js":"13","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\utils\\tasksMethods.js":"14","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\ui\\Alert\\index.jsx":"15"},{"size":362,"mtime":1607797614376,"results":"16","hashOfConfig":"17"},{"size":373,"mtime":1608096250431,"results":"18","hashOfConfig":"19"},{"size":189,"mtime":1608098115015,"results":"20","hashOfConfig":"19"},{"size":282,"mtime":1608097353973,"results":"21","hashOfConfig":"19"},{"size":1798,"mtime":1608177974873,"results":"22","hashOfConfig":"19"},{"size":235,"mtime":1608097472802,"results":"23","hashOfConfig":"19"},{"size":2016,"mtime":1608097575043,"results":"24","hashOfConfig":"19"},{"size":156,"mtime":1608097621879,"results":"25","hashOfConfig":"19"},{"size":2444,"mtime":1608177964313,"results":"26","hashOfConfig":"19"},{"size":6316,"mtime":1608178628028,"results":"27","hashOfConfig":"19"},{"size":923,"mtime":1608180146787,"results":"28","hashOfConfig":"19"},{"size":1320,"mtime":1608151663745,"results":"29","hashOfConfig":"19"},{"size":279,"mtime":1608178748402,"results":"30","hashOfConfig":"19"},{"size":836,"mtime":1608155445534,"results":"31","hashOfConfig":"19"},{"size":1030,"mtime":1608178945867,"results":"32","hashOfConfig":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"shce4p",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8dqwpv",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\reportWebVitals.js",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\utils\\axiosConfig.js",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\App.js",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\types\\index.js",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\actions\\tasksActions.js",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\store\\index.js",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\reducers\\tasksReducer.js",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\reducers\\index.js",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\components\\TaskCreation\\index.jsx",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\components\\Task\\index.jsx",["65"],"import React, { useState, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport './styles.css';\r\nimport { connect } from 'react-redux';\r\nimport { editTask, deleteTask } from '../../actions/tasksActions';\r\nimport { states, colors } from '../../constants';\r\nimport PropTypes from 'prop-types';\r\nimport Alert from '../../ui/Alert';\r\n\r\nconst Task = ({ task, editTask, deleteTask, isLoading }) => {\r\n\r\n    const [edit, setEdit] = useState(false);\r\n    const [newDescription, setNewDescription] = useState(\"\");\r\n    const [editError, setEditError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (task) {\r\n            setNewDescription(task.description);\r\n        };\r\n    }, [task]);\r\n\r\n    const handleEdit = () => {\r\n        if (newDescription.length < 10) {\r\n            setEditError(true);\r\n            return;\r\n        };\r\n\r\n        const body = {\r\n            \"id\": task.id,\r\n            \"description\": newDescription,\r\n            \"state\": task.state\r\n        };\r\n\r\n        editTask(body).then(setEdit(false));\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        deleteTask(task.id);\r\n    };\r\n\r\n    const handleStateChange = (newState) => {\r\n        const body = {\r\n            \"id\": task.id,\r\n            \"description\": task.description,\r\n            \"state\": newState\r\n        };\r\n\r\n        editTask(body);\r\n    };\r\n\r\n    return (\r\n        isLoading ?\r\n            <div>\r\n                Loading...\r\n        </div> :\r\n            <div className=\"taskContainer\" style={{ display: task ? \"flex\" : \"none\" }}>\r\n\r\n                <div className=\"taskDescription\">\r\n                    {\r\n                        edit ?\r\n                            <TextField\r\n                                error={editError}\r\n                                placeholder=\"What do i need to do?\"\r\n                                value={newDescription}\r\n                                onChange={(event) => {\r\n                                    setEditError(false)\r\n                                    setNewDescription(event.target.value)\r\n                                }}\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                            /> : <div\r\n                                style={{ color: task ? colors[task.state] : \"black\" }}>\r\n                                {task ? task.description : \"\"}\r\n                            </div>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"taskButtons\">\r\n\r\n                    <div style={{ display: !edit ? \"none\" : \"flex\" }}>\r\n                        <Button\r\n                            id=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleEdit}>\r\n                            Ok\r\n            </Button>\r\n                        <Button\r\n                            id=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => setEdit(false)}>\r\n                            Cancel\r\n            </Button>\r\n                    </div>\r\n\r\n                    <div style={{ display: edit ? \"none\" : \"flex\" }}>\r\n                        <Button\r\n                            id=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => setEdit(true)}\r\n                            disabled={task ? task.state === states.FINISHED : false}>\r\n                            Edit\r\n            </Button>\r\n                        <Button\r\n                            id=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleDelete}\r\n                            disabled={task ? task.state === states.IN_PROGRESS : false}>\r\n                            Delete\r\n            </Button>\r\n                        <Button\r\n                            id=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => handleStateChange(states.IN_PROGRESS)}\r\n                            disabled={task ? task.state === states.IN_PROGRESS || task.state === states.FINISHED : false}>\r\n                            Start\r\n            </Button>\r\n                        <Button\r\n                            id=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => handleStateChange(states.FINISHED)}\r\n                            disabled={task ? task.state === states.SUSPEND || task.state === states.FINISHED : false}>\r\n                            Finish\r\n            </Button>\r\n                        <Button\r\n                            id=\"button\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\" onClick={() => null}\r\n                            onClick={() => handleStateChange(states.SUSPEND)}\r\n                            disabled={task ? task.state === states.SUSPEND || task.state === states.FINISHED : false}>\r\n                            Suspend\r\n            </Button>\r\n                    </div>\r\n                </div>\r\n                <Alert\r\n                    open={editError}\r\n                    onClose={() => setEditError(false)}\r\n                    message=\"Description should be at least 10 characters long!\"\r\n                    type=\"error\"\r\n                    positionVertical=\"bottom\"\r\n                    positionHorizontal=\"left\"\r\n                    />\r\n            </div>\r\n    );\r\n};\r\n\r\nTask.defaultProps = {\r\n    editTask: () => null,\r\n    deleteTask: () => null,\r\n    isLoading: true,\r\n    task: {}\r\n};\r\n\r\nTask.propTypes = {\r\n    editTask: PropTypes.func,\r\n    deleteTask: PropTypes.func,\r\n    isLoading: PropTypes.bool,\r\n    task: PropTypes.object\r\n};\r\n\r\nconst mapActionsToProps = {\r\n    editTask,\r\n    deleteTask\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoading: state.reducer.isLoading,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapActionsToProps\r\n)(Task);","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\components\\TaskManager\\index.jsx",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\components\\TaskTable\\index.jsx",["66"],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\constants\\index.js",[],"C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\utils\\tasksMethods.js",["67"],"import { states } from '../constants';\r\n\r\nexport function getGeneralState(tasks) {\r\n    let areEqual = true;\r\n    let isInProgress = false;\r\n\r\n    if (tasks.length === 0) {\r\n        return \"\";\r\n    };\r\n\r\n    if (tasks.length === 1) {\r\n        return tasks[0].state;\r\n    };\r\n\r\n    for (var i = 0; i < tasks.length - 1; i++) {\r\n        if (tasks[i].state !== tasks[i + 1].state) {\r\n            areEqual = false;\r\n        };\r\n    };\r\n\r\n    if (areEqual) {\r\n        return tasks[0].state;\r\n    } else {\r\n        for (var i = 0; i < tasks.length; i++) {\r\n            if (tasks[i].state === states.IN_PROGRESS) {\r\n                isInProgress = true;\r\n                break;\r\n            };\r\n        };\r\n\r\n        if (isInProgress) {\r\n            return states.IN_PROGRESS;\r\n        } else {\r\n            return \"\";\r\n        };\r\n    };\r\n};\r\n","C:\\Users\\martin.a.kalistenco\\Documents\\Lumina\\task-manager\\src\\ui\\Alert\\index.jsx",[],{"ruleId":"68","severity":1,"message":"69","line":135,"column":29,"nodeType":"70","endLine":135,"endColumn":78},{"ruleId":"71","severity":1,"message":"72","line":10,"column":33,"nodeType":"73","endLine":10,"endColumn":35,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":24,"column":18,"nodeType":"77","messageId":"78","endLine":24,"endColumn":19},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTasks'. Either include it or remove the dependency array. If 'getTasks' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["79"],"no-redeclare","'i' is already defined.","Identifier","redeclared",{"desc":"80","fix":"81"},"Update the dependencies array to be: [getTasks]",{"range":"82","text":"83"},[311,313],"[getTasks]"]